{"mappings":"ACCA,IAAI,EAAe,CAAA,EACf,EAAU,GACV,EAAU,EACV,EAAQ,EACR,EAAmB,KA2EvB,SAAS,IACP,EAAe,CAAA,EACX,IACF,cAAc,GACd,EAAmB,KAEvB,CA/EA,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAG,EACxC,SAAS,cAAc,CAAC,OAAO,KAAK,CAAG,EACvC,SAAS,cAAc,CAAC,OAAO,KAAK,CAAG,EAEvC,SAAS,cAAc,CAAC,YAAY,gBAAgB,CAAC,QAAS,WACvD,IACH,EAAe,CAAA,EACX,GACF,cAAc,GAuBlB,EAAQ,KAAK,GAAG,CAAC,EAAG,SAAS,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAE,KAAO,GAC3E,EAAU,KAAK,GAAG,CAChB,EACA,SAAS,SAAS,cAAc,CAAC,OAAO,KAAK,CAAE,KAAO,GAExD,EAAU,KAAK,GAAG,CAChB,EACA,SAAS,SAAS,cAAc,CAAC,OAAO,KAAK,CAAE,KAAO,GAGpD,GACF,cAAc,GAGhB,EAAmB,YAAY,WAC7B,GAAK,GAEL,GAAI,AAAY,IAAZ,GACF,GAAI,EAAU,EACZ,IACA,EAAU,QACL,GAAI,EAAQ,EACjB,IACA,EAAU,GACV,EAAU,OACL,CAEL,EAAe,CAAA,EACf,cAAc,GACd,EAAmB,KACnB,MACF,OAEA,GAGF,CAAA,SAAS,cAAc,CAAC,OAAO,KAAK,CAAG,EACvC,SAAS,cAAc,CAAC,OAAO,KAAK,CAAG,EACvC,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAG,EAC1C,EA7EuB,KAmBzB,GAEA,SAAS,cAAc,CAAC,YAAY,gBAAgB,CAAC,QAAS,WAC5D,QAAQ,GAAG,CAAC,SACZ,GACF,GAEA,SAAS,cAAc,CAAC,aAAa,gBAAgB,CAAC,QAAS,WAC7D,IACA,EAAQ,EACR,EAAU,EACV,EAAU,GAEV,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAG,EACxC,SAAS,cAAc,CAAC,OAAO,KAAK,CAAG,EACvC,SAAS,cAAc,CAAC,OAAO,KAAK,CAAG,CACzC,GA0DA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,IAAM,EAAmB,SAAS,aAAa,CAAC,yBAC1C,EAAa,SAAS,aAAa,CAAC,sBACpC,EAAgB,SAAS,aAAa,CAAC,gCACvC,EAAmB,SAAS,aAAa,CAAC,wBAEhD,EAAiB,gBAAgB,CAAC,QAAS,KACpC,SAAS,iBAAiB,CAGzB,SAAS,cAAc,EACzB,SAAS,cAAc,GAHzB,SAAS,eAAe,CAAC,iBAAiB,EAM9C,GAEA,EAAW,gBAAgB,CAAC,QAAS,KACnC,EAAc,SAAS,CAAC,MAAM,CAAC,QAC/B,EAAiB,SAAS,CAAC,MAAM,CAAC,OACpC,GAGA,AADqB,SAAS,aAAa,CAAC,qBAC/B,gBAAgB,CAAC,QAAS,KACrC,EAAc,SAAS,CAAC,GAAG,CAAC,QAC5B,EAAiB,SAAS,CAAC,MAAM,CAAC,OACpC,GAGA,AADyB,SAAS,aAAa,CAAC,0BAC/B,gBAAgB,CAAC,QAAS,KACzC,EAAc,SAAS,CAAC,GAAG,CAAC,QAC5B,EAAiB,SAAS,CAAC,MAAM,CAAC,QAClC,EAAQ,SAAS,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAE,IACxD,EAAU,SAAS,SAAS,cAAc,CAAC,OAAO,KAAK,CAAE,IACzD,EAAU,SAAS,SAAS,cAAc,CAAC,OAAO,KAAK,CAAE,IACzD,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAG,EACxC,SAAS,cAAc,CAAC,OAAO,KAAK,CAAG,EACvC,SAAS,cAAc,CAAC,OAAO,KAAK,CAAG,CACzC,EACF","sources":["<anon>","script.js"],"sourcesContent":["const DEFAULT_INTERVAL = 1000;\nlet timerStarted = false;\nlet seconds = 30;\nlet minutes = 0;\nlet hours = 0;\nlet intervalInstance = null;\ndocument.getElementById(\"hour\").value = hours;\ndocument.getElementById(\"min\").value = minutes;\ndocument.getElementById(\"sec\").value = seconds;\ndocument.getElementById(\"startBtn\").addEventListener(\"click\", function() {\n    if (!timerStarted) {\n        timerStarted = true;\n        if (intervalInstance) clearInterval(intervalInstance);\n        run();\n    }\n});\ndocument.getElementById(\"pauseBtn\").addEventListener(\"click\", function() {\n    console.log(\"pause\");\n    pause();\n});\ndocument.getElementById(\"toZeroBtn\").addEventListener(\"click\", function() {\n    pause();\n    hours = 0;\n    minutes = 0;\n    seconds = 30;\n    document.getElementById(\"hour\").value = hours;\n    document.getElementById(\"min\").value = minutes;\n    document.getElementById(\"sec\").value = seconds;\n});\nfunction run() {\n    hours = Math.max(0, parseInt(document.getElementById(\"hour\").value, 10) || 0);\n    minutes = Math.max(0, parseInt(document.getElementById(\"min\").value, 10) || 0);\n    seconds = Math.max(0, parseInt(document.getElementById(\"sec\").value, 10) || 0);\n    if (intervalInstance) clearInterval(intervalInstance);\n    intervalInstance = setInterval(function() {\n        if (!timerStarted) return;\n        if (seconds === 0) {\n            if (minutes > 0) {\n                minutes--;\n                seconds = 59;\n            } else if (hours > 0) {\n                hours--;\n                minutes = 59;\n                seconds = 59;\n            } else {\n                // Timer acabou\n                timerStarted = false;\n                clearInterval(intervalInstance);\n                intervalInstance = null;\n                return;\n            }\n        } else seconds--;\n        document.getElementById(\"sec\").value = seconds;\n        document.getElementById(\"min\").value = minutes;\n        document.getElementById(\"hour\").value = hours;\n    }, DEFAULT_INTERVAL);\n}\nfunction pause() {\n    timerStarted = false;\n    if (intervalInstance) {\n        clearInterval(intervalInstance);\n        intervalInstance = null;\n    }\n}\nfunction stop() {\n    timerStarted = false;\n}\n// funcionalidade para o botão de tela cheia e editar\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const fullscreenButton = document.querySelector(\".js-active-fullscreen\");\n    const editButton = document.querySelector(\".js-edit-stopwatch\");\n    const editContainer = document.querySelector(\".js-edit-container-stopwatch\");\n    const stopwatchButtons = document.querySelector(\".js-stopwatch-button\");\n    fullscreenButton.addEventListener(\"click\", ()=>{\n        if (!document.fullscreenElement) document.documentElement.requestFullscreen();\n        else if (document.exitFullscreen) document.exitFullscreen();\n    });\n    editButton.addEventListener(\"click\", ()=>{\n        editContainer.classList.toggle(\"hide\");\n        stopwatchButtons.classList.toggle(\"hide\");\n    });\n    const cancelButton = document.querySelector(\".js-cancel-button\");\n    cancelButton.addEventListener(\"click\", ()=>{\n        editContainer.classList.add(\"hide\");\n        stopwatchButtons.classList.remove(\"hide\");\n    });\n    const finishEditButton = document.querySelector(\".js-finish-edit-button\");\n    finishEditButton.addEventListener(\"click\", ()=>{\n        editContainer.classList.add(\"hide\");\n        stopwatchButtons.classList.remove(\"hide\");\n        hours = parseInt(document.getElementById(\"hour\").value, 10);\n        minutes = parseInt(document.getElementById(\"min\").value, 10);\n        seconds = parseInt(document.getElementById(\"sec\").value, 10);\n        document.getElementById(\"hour\").value = hours;\n        document.getElementById(\"min\").value = minutes;\n        document.getElementById(\"sec\").value = seconds;\n    });\n});\n\n//# sourceMappingURL=index.027c9615.js.map\n","const DEFAULT_INTERVAL = 1000;\nlet timerStarted = false;\nlet seconds = 30;\nlet minutes = 0;\nlet hours = 0;\nlet intervalInstance = null;\n\ndocument.getElementById(\"hour\").value = hours;\ndocument.getElementById(\"min\").value = minutes;\ndocument.getElementById(\"sec\").value = seconds;\n\ndocument.getElementById(\"startBtn\").addEventListener(\"click\", function () {\n  if (!timerStarted) {\n    timerStarted = true;\n    if (intervalInstance) {\n      clearInterval(intervalInstance);\n    }\n    run();\n  }\n});\n\ndocument.getElementById(\"pauseBtn\").addEventListener(\"click\", function () {\n  console.log(\"pause\");\n  pause();\n});\n\ndocument.getElementById(\"toZeroBtn\").addEventListener(\"click\", function () {\n  pause();\n  hours = 0;\n  minutes = 0;\n  seconds = 30;\n\n  document.getElementById(\"hour\").value = hours;\n  document.getElementById(\"min\").value = minutes;\n  document.getElementById(\"sec\").value = seconds;\n});\n\nfunction run() {\n  hours = Math.max(0, parseInt(document.getElementById(\"hour\").value, 10) || 0);\n  minutes = Math.max(\n    0,\n    parseInt(document.getElementById(\"min\").value, 10) || 0\n  );\n  seconds = Math.max(\n    0,\n    parseInt(document.getElementById(\"sec\").value, 10) || 0\n  );\n\n  if (intervalInstance) {\n    clearInterval(intervalInstance);\n  }\n\n  intervalInstance = setInterval(function () {\n    if (!timerStarted) return;\n\n    if (seconds === 0) {\n      if (minutes > 0) {\n        minutes--;\n        seconds = 59;\n      } else if (hours > 0) {\n        hours--;\n        minutes = 59;\n        seconds = 59;\n      } else {\n        // Timer acabou\n        timerStarted = false;\n        clearInterval(intervalInstance);\n        intervalInstance = null;\n        return;\n      }\n    } else {\n      seconds--;\n    }\n\n    document.getElementById(\"sec\").value = seconds;\n    document.getElementById(\"min\").value = minutes;\n    document.getElementById(\"hour\").value = hours;\n  }, DEFAULT_INTERVAL);\n}\n\nfunction pause() {\n  timerStarted = false;\n  if (intervalInstance) {\n    clearInterval(intervalInstance);\n    intervalInstance = null;\n  }\n}\n\nfunction stop() {\n  timerStarted = false;\n}\n\n// funcionalidade para o botão de tela cheia e editar\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const fullscreenButton = document.querySelector(\".js-active-fullscreen\");\n  const editButton = document.querySelector(\".js-edit-stopwatch\");\n  const editContainer = document.querySelector(\".js-edit-container-stopwatch\");\n  const stopwatchButtons = document.querySelector(\".js-stopwatch-button\");\n\n  fullscreenButton.addEventListener(\"click\", () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    }\n  });\n\n  editButton.addEventListener(\"click\", () => {\n    editContainer.classList.toggle(\"hide\");\n    stopwatchButtons.classList.toggle(\"hide\");\n  });\n\n  const cancelButton = document.querySelector(\".js-cancel-button\");\n  cancelButton.addEventListener(\"click\", () => {\n    editContainer.classList.add(\"hide\");\n    stopwatchButtons.classList.remove(\"hide\");\n  });\n\n  const finishEditButton = document.querySelector(\".js-finish-edit-button\");\n  finishEditButton.addEventListener(\"click\", () => {\n    editContainer.classList.add(\"hide\");\n    stopwatchButtons.classList.remove(\"hide\");\n    hours = parseInt(document.getElementById(\"hour\").value, 10);\n    minutes = parseInt(document.getElementById(\"min\").value, 10);\n    seconds = parseInt(document.getElementById(\"sec\").value, 10);\n    document.getElementById(\"hour\").value = hours;\n    document.getElementById(\"min\").value = minutes;\n    document.getElementById(\"sec\").value = seconds;\n  });\n});\n"],"names":["timerStarted","seconds","minutes","hours","intervalInstance","pause","clearInterval","document","getElementById","value","addEventListener","Math","max","parseInt","setInterval","console","log","fullscreenButton","querySelector","editButton","editContainer","stopwatchButtons","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","classList","toggle","cancelButton","add","remove","finishEditButton"],"version":3,"file":"index.027c9615.js.map"}